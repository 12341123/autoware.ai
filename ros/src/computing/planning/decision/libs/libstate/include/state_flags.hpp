#ifndef __STATE_FLAGS_HPP__
#define __STATE_FLAGS_HPP__

namespace state_machine
{
enum StateFlags
{
  NULL_STATE = 1 << 0,
  START_STATE = 1 << 1,
  INITIAL_STATE = 1 << 2,
  INITIAL_LOCATEVEHICLE_STATE = 1 << 3,
  DRIVE_STATE = 1 << 4,
  DRIVE_MOVEFWD_STATE = 1 << 5,
  DRIVE_MOVEFWD_LEFT_STATE = 1 << 6,
  DRIVE_MOVEFWD_RIGHT_STATE = 1 << 7,
  DRIVE_MOVEFWD_STRAIGHT_STATE = 1 << 8,
  DRIVE_LANECHANGE_STATE = 1 << 9,
  DRIVE_LANECHANGE_LEFT_STATE = 1 << 10,
  DRIVE_LANECHANGE_RIGHT_STATE = 1 << 11,
  DRIVE_LANECHANGE_RIGHT_AVOIDANCE_STATE = 1 << 12,
  DRIVE_OBSTACLE_AVOIDANCE_STATE = 1 << 13,
  DRIVE_OBSTACLE_AVOIDANCE_STATIC_STATE = 1 << 14,
  DRIVE_OBSTACLE_AVOIDANCE_DYNAMIC_STATE = 1 << 15,
  DRIVE_STOP_STATE = 1 << 16,
  DRIVE_STOP_AVOIDANCE_STATE = 1 << 17,
  DRIVE_STOP_STOPLINE_STATE = 1 << 18,
  DRIVE_STOP_TRAFFICLIGHT_STATE = 1 << 19,
  MISSION_COMPLETE_STATE = 1 << 20,
  EMERGENCY_STATE = 1 << 21,
  EMERGENCY_HW_STATE = 1 << 22,
  EMERGENCY_HWVEHICLE_STATE = 1 << 23,
  EMERGENCY_HWCONTROLLER_STATE = 1 << 24,
  EMERGENCY_SW_STATE = 1 << 25,
  EMERGENCY_SWAUTOWARE_STATE = 1 << 26,
  EMERGENCY_SWCONTROLLER_STATE = 1 << 27,
  STATE_END = 1 << 28,
};

enum TrafficLightColors
{
  RED,
  YELLOW,
  GREEN,
  COLOR_ERROR
};
}

#endif
